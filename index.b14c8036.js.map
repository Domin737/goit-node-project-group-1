{"mappings":"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","sources":["<anon>","src/index.js","src/pages/HomePage.js","src/components/LogoutButton.js","src/utils/logoutUtils.js","src/components/Balance.js","src/config.js","src/components/Modal.js","src/components/TransactionForm.js","src/components/TransactionList.js","src/pages/LoginPage.js","src/components/Login.js","src/components/RegisterForm.js"],"sourcesContent":["// /src/index.js\n// src/pages/HomePage.js\n// /src/components/LogoutButton.js\nfunction $3c2a6f005c424ba8$export$2e2bcd8739ae039() {\n    return `\n    <button id=\"logout-btn\">Wyloguj</button>\n  `;\n}\nfunction $3c2a6f005c424ba8$export$a9a09da5e2f15353(onLogoutClick) {\n    const logoutBtn = document.getElementById(\"logout-btn\");\n    if (logoutBtn) logoutBtn.addEventListener(\"click\", onLogoutClick);\n}\n\n\n// /src/utils/logoutUtils.js\nasync function $989791cafdc493c9$export$297d1113e3afbc21() {\n    try {\n        const token = localStorage.getItem(\"userToken\");\n        if (!token) throw new Error(\"Brak tokenu uwierzytelniaj\\u0105cego\");\n        const response = await fetch(\"/api/users/logout\", {\n            method: \"POST\",\n            headers: {\n                Authorization: `Bearer ${token}`,\n                \"Content-Type\": \"application/json\"\n            }\n        });\n        if (!response.ok) throw new Error(\"B\\u0142\\u0105d podczas wylogowywania\");\n        // Usunięcie tokena JWT z localStorage\n        localStorage.removeItem(\"userToken\");\n        // Można dodać więcej informacji do wyczyszczenia, np. imię użytkownika, email itp.\n        localStorage.removeItem(\"userName\");\n        localStorage.removeItem(\"userEmail\");\n        // Przekierowanie na stronę logowania\n        window.location.href = \"/login\";\n    } catch (error) {\n        console.error(\"B\\u0142\\u0105d podczas wylogowywania:\", error);\n        alert(`Wyst\\u{105}pi\\u{142} b\\u{142}\\u{105}d podczas wylogowywania: ${error.message}`);\n    }\n}\n\n\n// src/components/Balance.js\n// /src/config.js\n// Zmienna przechowująca adres URL API\nconst $bebe1cbb5a309c8c$export$923ea8233b386e99 = \"http://localhost:3000/api\";\n\n\n// /src/components/Modal.js\nfunction $05e7e3be0aee325f$export$2e2bcd8739ae039({ message: message, confirmAction: confirmAction, confirmLabel: confirmLabel = \"YES\", cancelAction: cancelAction = null, cancelLabel: cancelLabel = \"NO\" }) {\n    return `\n      <div class=\"modal\">\n        <div class=\"modal-content\">\n          <p>${message}</p>\n          <button id=\"modal-confirm-btn\">${confirmLabel}</button>\n          ${cancelAction ? `<button id=\"modal-cancel-btn\">${cancelLabel}</button>` : \"\"}\n        </div>\n      </div>\n    `;\n}\nfunction $05e7e3be0aee325f$export$60f0f9f4cfa9469a(confirmAction, cancelAction = null) {\n    const confirmBtn = document.getElementById(\"modal-confirm-btn\");\n    confirmBtn.addEventListener(\"click\", confirmAction);\n    if (cancelAction) {\n        const cancelBtn = document.getElementById(\"modal-cancel-btn\");\n        cancelBtn.addEventListener(\"click\", cancelAction);\n    }\n}\nfunction $05e7e3be0aee325f$export$2e779e3b7252ee8(modalContainer, modalClass) {\n    document.addEventListener(\"click\", (event)=>{\n        const modal = document.querySelector(modalClass);\n        if (modal && !modal.contains(event.target)) modalContainer.innerHTML = \"\"; // Ukryj modal\n    });\n}\n\n\n// Funkcja pokazująca modal potwierdzający aktualizację bilansu\nfunction $a41a1172b6be875d$var$showConfirmationModal(message, confirmAction) {\n    const confirmationModalContainer = document.getElementById(\"confirmation-modal-container\");\n    confirmationModalContainer.innerHTML = (0, $05e7e3be0aee325f$export$2e2bcd8739ae039)({\n        message: message,\n        confirmLabel: \"YES\",\n        cancelLabel: \"NO\",\n        confirmAction: ()=>{\n            confirmAction();\n            confirmationModalContainer.innerHTML = \"\"; // Ukryj modal po potwierdzeniu\n        },\n        cancelAction: ()=>{\n            confirmationModalContainer.innerHTML = \"\"; // Ukryj modal po anulowaniu\n        }\n    });\n    (0, $05e7e3be0aee325f$export$60f0f9f4cfa9469a)(()=>{\n        confirmAction();\n        confirmationModalContainer.innerHTML = \"\"; // Ukryj modal po potwierdzeniu\n    }, ()=>{\n        confirmationModalContainer.innerHTML = \"\"; // Ukryj modal po anulowaniu\n    });\n}\nfunction $a41a1172b6be875d$export$276e99f8b64146b2() {\n    return `\n    <div id=\"balance-container\">\n      <h2>Bilans</h2>\n      <p id=\"balance-amount\">\\u{141}adowanie...</p>\n      <button id=\"update-balance-btn\">Aktualizuj bilans</button>\n    </div>\n  `;\n}\nasync function $a41a1172b6be875d$export$e215f40035e0215c() {\n    const balanceAmount = document.getElementById(\"balance-amount\");\n    const updateBalanceBtn = document.getElementById(\"update-balance-btn\");\n    async function fetchBalance() {\n        try {\n            const response = await fetch(`${(0, $bebe1cbb5a309c8c$export$923ea8233b386e99)}/users/balance`, {\n                headers: {\n                    Authorization: `Bearer ${localStorage.getItem(\"userToken\")}`\n                }\n            });\n            const data = await response.json();\n            balanceAmount.textContent = `${data.balance.toFixed(2)} EUR`;\n        } catch (error) {\n            console.error(\"B\\u0142\\u0105d podczas pobierania bilansu:\", error);\n            balanceAmount.textContent = \"B\\u0142\\u0105d podczas \\u0142adowania bilansu\";\n        }\n    }\n    async function updateBalance(newBalance) {\n        try {\n            const response = await fetch(`${(0, $bebe1cbb5a309c8c$export$923ea8233b386e99)}/users/balance`, {\n                method: \"PUT\",\n                headers: {\n                    \"Content-Type\": \"application/json\",\n                    Authorization: `Bearer ${localStorage.getItem(\"userToken\")}`\n                },\n                body: JSON.stringify({\n                    balance: parseFloat(newBalance)\n                })\n            });\n            const data = await response.json();\n            balanceAmount.textContent = `${data.balance.toFixed(2)} EUR`;\n            // Sprawdzenie, czy zaktualizowany bilans wynosi 0 i wyświetlenie modala\n            if (data.balance === 0) $a41a1172b6be875d$var$showZeroBalanceModal();\n        } catch (error) {\n            console.error(\"B\\u0142\\u0105d podczas aktualizacji bilansu:\", error);\n            alert(\"Wyst\\u0105pi\\u0142 b\\u0142\\u0105d podczas aktualizacji bilansu\");\n        }\n    }\n    updateBalanceBtn.addEventListener(\"click\", async ()=>{\n        const newBalance = prompt(\"Podaj nowy bilans:\");\n        if (newBalance === null) return;\n        $a41a1172b6be875d$var$showConfirmationModal(\"Czy na pewno chcesz zaktualizowa\\u0107 bilans?\", async ()=>{\n            await updateBalance(newBalance);\n        });\n    });\n    await fetchBalance();\n    return {\n        updateBalance: updateBalance,\n        refreshBalance: fetchBalance\n    };\n}\n// Funkcja do pokazywania modala zerowego bilansu\nfunction $a41a1172b6be875d$var$showZeroBalanceModal() {\n    const zeroBalanceModalContainer = document.getElementById(\"zero-balance-modal-container\");\n    zeroBalanceModalContainer.innerHTML = (0, $05e7e3be0aee325f$export$2e2bcd8739ae039)({\n        message: \"Hello! To get started, enter the current balance of your account! You can't spend money until you have it :)\",\n        confirmLabel: \"OK\",\n        confirmAction: ()=>{\n            zeroBalanceModalContainer.innerHTML = \"\"; // Ukryj modal po kliknięciu \"OK\"\n        }\n    });\n    (0, $05e7e3be0aee325f$export$60f0f9f4cfa9469a)(()=>{\n        zeroBalanceModalContainer.innerHTML = \"\"; // Ukryj modal po kliknięciu \"OK\"\n    });\n    // Umożliwienie zamknięcia modala po kliknięciu poza nim\n    setupOutsideClickModal(zeroBalanceModalContainer, \".modal\");\n}\n\n\n// src/components/TransactionForm.js\n\nfunction $e822bee597e56651$export$bc5e0209b4065738() {\n    return `\n    <div id=\"transaction-form-container\">\n      <h2>Dodaj transakcj\\u{119}</h2>\n      <form id=\"transaction-form\">\n        <select id=\"transaction-type\" required>\n          <option value=\"\">Wybierz typ</option>\n          <option value=\"income\">Przych\\xf3d</option>\n          <option value=\"expense\">Wydatek</option>\n        </select>\n        <input type=\"text\" id=\"transaction-category\" placeholder=\"Kategoria\" required>\n        <input type=\"number\" id=\"transaction-amount\" placeholder=\"Kwota\" step=\"0.01\" required>\n        <input type=\"text\" id=\"transaction-description\" placeholder=\"Opis\" required>\n        <button type=\"submit\">Dodaj</button>\n      </form>\n    </div>\n  `;\n}\nfunction $e822bee597e56651$export$cbcb4f95a6fa1574(onTransactionAdded) {\n    const form = document.getElementById(\"transaction-form\");\n    form.addEventListener(\"submit\", async (e)=>{\n        e.preventDefault();\n        const type = document.getElementById(\"transaction-type\").value;\n        const category = document.getElementById(\"transaction-category\").value;\n        const amount = parseFloat(document.getElementById(\"transaction-amount\").value);\n        const description = document.getElementById(\"transaction-description\").value;\n        try {\n            const response = await fetch(`${(0, $bebe1cbb5a309c8c$export$923ea8233b386e99)}/transactions`, {\n                method: \"POST\",\n                headers: {\n                    \"Content-Type\": \"application/json\",\n                    Authorization: `Bearer ${localStorage.getItem(\"userToken\")}`\n                },\n                body: JSON.stringify({\n                    type: type,\n                    category: category,\n                    amount: amount,\n                    description: description\n                })\n            });\n            if (!response.ok) throw new Error(\"B\\u0142\\u0105d podczas dodawania transakcji\");\n            const result = await response.json();\n            alert(\"Transakcja dodana pomy\\u015Blnie\");\n            form.reset();\n            if (onTransactionAdded) onTransactionAdded(result.transaction, result.newBalance);\n        } catch (error) {\n            console.error(\"B\\u0142\\u0105d podczas dodawania transakcji:\", error);\n            alert(\"Wyst\\u0105pi\\u0142 b\\u0142\\u0105d podczas dodawania transakcji\");\n        }\n    });\n}\n\n\n// src/components/TransactionList.js\n\n\nfunction $53667404e219f87f$export$f0d9cf1e329477be() {\n    return `\n    <div id=\"transaction-list-container\">\n      <h2>Lista transakcji</h2>\n      <ul id=\"transaction-list\"></ul>\n    </div>\n  `;\n}\nasync function $53667404e219f87f$export$35fea698833488ba(onTransactionDeleted) {\n    const transactionList = document.getElementById(\"transaction-list\");\n    async function fetchTransactions() {\n        try {\n            const response = await fetch(`${(0, $bebe1cbb5a309c8c$export$923ea8233b386e99)}/transactions`, {\n                headers: {\n                    Authorization: `Bearer ${localStorage.getItem(\"userToken\")}`\n                }\n            });\n            const transactions = await response.json();\n            renderTransactions(transactions);\n        } catch (error) {\n            console.error(\"B\\u0142\\u0105d podczas pobierania transakcji:\", error);\n            transactionList.innerHTML = \"<li>B\\u0142\\u0105d podczas \\u0142adowania transakcji</li>\";\n        }\n    }\n    function renderTransactions(transactions) {\n        transactionList.innerHTML = transactions.map((transaction)=>`\n        <li data-id=\"${transaction._id}\">\n          ${transaction.type === \"income\" ? \"\\uD83D\\uDCC8\" : \"\\uD83D\\uDCC9\"}\n          ${transaction.category} - ${transaction.amount.toFixed(2)} EUR\n          (${transaction.description})\n          <button class=\"delete-transaction\">Usu\\u{144}</button>\n        </li>\n      `).join(\"\");\n        setupDeleteButtons();\n    }\n    function setupDeleteButtons() {\n        const deleteButtons = document.querySelectorAll(\".delete-transaction\");\n        deleteButtons.forEach((button)=>{\n            button.addEventListener(\"click\", async (e)=>{\n                const transactionId = e.target.closest(\"li\").dataset.id;\n                $53667404e219f87f$var$showConfirmationModal(\"Czy na pewno chcesz usun\\u0105\\u0107 transakcj\\u0119?\", async ()=>{\n                    try {\n                        const response = await fetch(`${(0, $bebe1cbb5a309c8c$export$923ea8233b386e99)}/transactions/${transactionId}`, {\n                            method: \"DELETE\",\n                            headers: {\n                                Authorization: `Bearer ${localStorage.getItem(\"userToken\")}`\n                            }\n                        });\n                        if (!response.ok) throw new Error(\"B\\u0142\\u0105d podczas usuwania transakcji\");\n                        const result = await response.json();\n                        e.target.closest(\"li\").remove();\n                        alert(\"Transakcja usuni\\u0119ta pomy\\u015Blnie\");\n                        if (onTransactionDeleted) onTransactionDeleted(result.newBalance);\n                    } catch (error) {\n                        console.error(\"B\\u0142\\u0105d podczas usuwania transakcji:\", error);\n                        alert(\"Wyst\\u0105pi\\u0142 b\\u0142\\u0105d podczas usuwania transakcji\");\n                    }\n                });\n            });\n        });\n    }\n    await fetchTransactions();\n    return {\n        refreshTransactions: fetchTransactions\n    };\n}\n// Funkcja pokazująca modal potwierdzający usunięcie transakcji\nfunction $53667404e219f87f$var$showConfirmationModal(message, confirmAction) {\n    const confirmationModalContainer = document.getElementById(\"confirmation-modal-container\");\n    confirmationModalContainer.innerHTML = (0, $05e7e3be0aee325f$export$2e2bcd8739ae039)({\n        message: message,\n        confirmLabel: \"YES\",\n        cancelLabel: \"NO\",\n        confirmAction: ()=>{\n            confirmAction();\n            confirmationModalContainer.innerHTML = \"\"; // Ukryj modal po potwierdzeniu\n        },\n        cancelAction: ()=>{\n            confirmationModalContainer.innerHTML = \"\"; // Ukryj modal po anulowaniu\n        }\n    });\n    (0, $05e7e3be0aee325f$export$60f0f9f4cfa9469a)(()=>{\n        confirmAction();\n        confirmationModalContainer.innerHTML = \"\"; // Ukryj modal po potwierdzeniu\n    }, ()=>{\n        confirmationModalContainer.innerHTML = \"\"; // Ukryj modal po anulowaniu\n    });\n}\n\n\n\n\nfunction $00b513cc47574162$export$2e2bcd8739ae039() {\n    return `\n    <div id=\"home-page\">\n      <h1>Witaj w aplikacji Kapu$ta!</h1>\n      ${(0, $a41a1172b6be875d$export$276e99f8b64146b2)()}\n      ${(0, $e822bee597e56651$export$bc5e0209b4065738)()}\n      ${(0, $53667404e219f87f$export$f0d9cf1e329477be)()}\n      ${(0, $3c2a6f005c424ba8$export$2e2bcd8739ae039)()}\n      \n      <!-- Modale -->\n      <div id=\"confirmation-modal-container\"></div>\n      <div id=\"logout-modal-container\"></div>\n      <div id=\"zero-balance-modal-container\"></div>\n    </div>\n  `;\n}\nasync function $00b513cc47574162$export$ad66e97ee146d3ae() {\n    const balanceSetup = await (0, $a41a1172b6be875d$export$e215f40035e0215c)();\n    const transactionListSetup = await (0, $53667404e219f87f$export$35fea698833488ba)(async (newBalance)=>{\n        await balanceSetup.updateBalance(newBalance);\n        // Sprawdzenie, czy bilans wynosi 0 po operacji\n        if (newBalance === 0) $00b513cc47574162$var$showZeroBalanceModal();\n    });\n    (0, $e822bee597e56651$export$cbcb4f95a6fa1574)(async (transaction, newBalance)=>{\n        // Aktualizacja balansu i odświeżenie listy transakcji po dodaniu transakcji\n        await balanceSetup.updateBalance(newBalance);\n        await transactionListSetup.refreshTransactions();\n        // Sprawdzenie, czy bilans wynosi 0 po dodaniu transakcji\n        if (newBalance === 0) $00b513cc47574162$var$showZeroBalanceModal();\n    });\n    // Sprawdzenie bilansu po załadowaniu strony\n    const currentBalance = await $00b513cc47574162$var$fetchCurrentBalance();\n    if (currentBalance === 0) $00b513cc47574162$var$showZeroBalanceModal();\n    // Obsługa przycisku wylogowania\n    (0, $3c2a6f005c424ba8$export$a9a09da5e2f15353)(()=>{\n        $00b513cc47574162$var$showLogoutModal();\n    });\n}\n// Funkcja do pokazywania modala dla zerowego bilansu (OK)\nfunction $00b513cc47574162$var$showZeroBalanceModal() {\n    const zeroBalanceModalContainer = document.getElementById(\"zero-balance-modal-container\");\n    zeroBalanceModalContainer.innerHTML = (0, $05e7e3be0aee325f$export$2e2bcd8739ae039)({\n        message: \"Hello! To get started, enter the current balance of your account! You can't spend money until you have it :)\",\n        confirmLabel: \"OK\",\n        confirmAction: ()=>{\n            zeroBalanceModalContainer.innerHTML = \"\"; // Ukryj modal po kliknięciu \"OK\"\n        }\n    });\n    (0, $05e7e3be0aee325f$export$60f0f9f4cfa9469a)(()=>{\n        zeroBalanceModalContainer.innerHTML = \"\"; // Ukryj modal po kliknięciu \"OK\"\n    });\n    // Umożliwienie zamknięcia modala po kliknięciu poza nim\n    (0, $05e7e3be0aee325f$export$2e779e3b7252ee8)(zeroBalanceModalContainer, \".modal\");\n}\n// Funkcja do pokazywania modala wylogowania (YES/NO)\nfunction $00b513cc47574162$var$showLogoutModal() {\n    const logoutModalContainer = document.getElementById(\"logout-modal-container\");\n    logoutModalContainer.innerHTML = (0, $05e7e3be0aee325f$export$2e2bcd8739ae039)({\n        message: \"Czy na pewno chcesz si\\u0119 wylogowa\\u0107?\",\n        confirmLabel: \"Tak\",\n        cancelLabel: \"Nie\",\n        confirmAction: ()=>{\n            (0, $989791cafdc493c9$export$297d1113e3afbc21)();\n            logoutModalContainer.innerHTML = \"\"; // Ukryj modal po wylogowaniu\n        },\n        cancelAction: ()=>{\n            logoutModalContainer.innerHTML = \"\"; // Ukryj modal po anulowaniu\n        }\n    });\n    (0, $05e7e3be0aee325f$export$60f0f9f4cfa9469a)(()=>{\n        (0, $989791cafdc493c9$export$297d1113e3afbc21)();\n        logoutModalContainer.innerHTML = \"\"; // Ukryj modal po wylogowaniu\n    }, ()=>{\n        logoutModalContainer.innerHTML = \"\"; // Ukryj modal po anulowaniu\n    });\n}\n// Funkcja do pokazywania modala potwierdzającego akcję (YES/NO)\nfunction $00b513cc47574162$var$showConfirmationModal(message, confirmAction) {\n    const confirmationModalContainer = document.getElementById(\"confirmation-modal-container\");\n    confirmationModalContainer.innerHTML = (0, $05e7e3be0aee325f$export$2e2bcd8739ae039)({\n        message: message,\n        confirmLabel: \"YES\",\n        cancelLabel: \"NO\",\n        confirmAction: ()=>{\n            confirmAction();\n            confirmationModalContainer.innerHTML = \"\"; // Ukryj modal po potwierdzeniu\n        },\n        cancelAction: ()=>{\n            confirmationModalContainer.innerHTML = \"\"; // Ukryj modal po anulowaniu\n        }\n    });\n    (0, $05e7e3be0aee325f$export$60f0f9f4cfa9469a)(()=>{\n        confirmAction();\n        confirmationModalContainer.innerHTML = \"\"; // Ukryj modal po potwierdzeniu\n    }, ()=>{\n        confirmationModalContainer.innerHTML = \"\"; // Ukryj modal po anulowaniu\n    });\n}\n// Funkcja do pobierania bieżącego bilansu z backendu\nasync function $00b513cc47574162$var$fetchCurrentBalance() {\n    try {\n        const response = await fetch(`${(0, $bebe1cbb5a309c8c$export$923ea8233b386e99)}/users/balance`, {\n            headers: {\n                Authorization: `Bearer ${localStorage.getItem(\"userToken\")}`\n            }\n        });\n        const data = await response.json();\n        return data.balance;\n    } catch (error) {\n        console.error(\"B\\u0142\\u0105d podczas pobierania bilansu:\", error);\n        return null;\n    }\n}\n\n\n// /src/pages/LoginPage.js\n// /src/components/Login.js\n\n\nasync function $96b47ed419553bef$export$da4fc2bf424da4ca(event) {\n    event.preventDefault();\n    const email = document.getElementById(\"email\").value;\n    const password = document.getElementById(\"password\").value;\n    try {\n        // Wysłanie zapytania POST do API\n        const response = await fetch(`${(0, $bebe1cbb5a309c8c$export$923ea8233b386e99)}/users/login`, {\n            method: \"POST\",\n            headers: {\n                \"Content-Type\": \"application/json\"\n            },\n            body: JSON.stringify({\n                email: email,\n                password: password\n            })\n        });\n        const data = await response.json();\n        if (response.ok) {\n            // Zalogowano pomyślnie, zapisujemy token\n            console.log(\"Zalogowano pomy\\u015Blnie:\", data);\n            localStorage.setItem(\"userToken\", data.token);\n            // Wywołanie renderApp do przerysowania aplikacji\n            (0, $35da740d59af89ba$export$bd45a425ac802846)();\n        } else {\n            // Obsługa błędów logowania\n            console.error(\"B\\u0142\\u0105d logowania:\", data.message || \"Nieznany b\\u0142\\u0105d\");\n            alert(`B\\u{142}\\u{105}d logowania: ${data.message}`);\n        }\n    } catch (error) {\n        console.error(\"Wyst\\u0105pi\\u0142 problem z logowaniem:\", error);\n        alert(\"Wyst\\u0105pi\\u0142 problem z logowaniem. Spr\\xf3buj ponownie p\\xf3\\u017Aniej.\");\n    }\n}\nfunction $96b47ed419553bef$export$2e2bcd8739ae039() {\n    return `\n    <form id=\"login-form\">\n      <label for=\"email\">Email:</label>\n      <input type=\"email\" id=\"email\" required />\n      \n      <label for=\"password\">Has\\u{142}o:</label>\n      <input type=\"password\" id=\"password\" required />\n      \n      <button type=\"submit\">Zaloguj</button>\n    </form>\n  `;\n}\n\n\n// src/components/RegisterForm.js\nfunction $cac777f1d6df4413$export$2e2bcd8739ae039() {\n    return `\n    <form id=\"register-form\">\n      <h2>Rejestracja</h2>\n      <div>\n        <label for=\"register-name\">Imi\\u{119}:</label>\n        <input type=\"text\" id=\"register-name\" name=\"name\" required>\n      </div>\n      <div>\n        <label for=\"register-email\">Email:</label>\n        <input type=\"email\" id=\"register-email\" name=\"email\" required>\n      </div>\n      <div>\n        <label for=\"register-password\">Has\\u{142}o:</label>\n        <input type=\"password\" id=\"register-password\" name=\"password\" required>\n      </div>\n      <button type=\"submit\">Zarejestruj si\\u{119}</button>\n    </form>\n  `;\n}\nfunction $cac777f1d6df4413$export$c10c104de484e4d6(onRegisterSuccess) {\n    const form = document.getElementById(\"register-form\");\n    form.addEventListener(\"submit\", async (e)=>{\n        e.preventDefault();\n        const formData = new FormData(form);\n        const userData = Object.fromEntries(formData.entries());\n        try {\n            const response = await fetch(\"/api/users/register\", {\n                method: \"POST\",\n                headers: {\n                    \"Content-Type\": \"application/json\"\n                },\n                body: JSON.stringify(userData)\n            });\n            if (response.ok) {\n                alert(\"Rejestracja udana! Mo\\u017Cesz si\\u0119 teraz zalogowa\\u0107.\");\n                onRegisterSuccess();\n            } else {\n                const errorData = await response.json();\n                alert(`B\\u{142}\\u{105}d rejestracji: ${errorData.message}`);\n            }\n        } catch (error) {\n            console.error(\"B\\u0142\\u0105d podczas rejestracji:\", error);\n            alert(\"Wyst\\u0105pi\\u0142 b\\u0142\\u0105d podczas rejestracji. Spr\\xf3buj ponownie p\\xf3\\u017Aniej.\");\n        }\n    });\n}\n\n\nfunction $0a0889c88b6ced0b$export$2e2bcd8739ae039() {\n    return `\n    <div id=\"auth-container\">\n      <div id=\"login-section\">\n        <h2>Logowanie</h2>\n        ${(0, $96b47ed419553bef$export$2e2bcd8739ae039)()}\n        <button id=\"switch-to-register\">Zarejestruj si\\u{119}</button>\n      </div>\n      <div id=\"register-section\" style=\"display: none;\">\n        ${(0, $cac777f1d6df4413$export$2e2bcd8739ae039)()}\n        <button id=\"switch-to-login\">Powr\\xf3t do logowania</button>\n      </div>\n    </div>\n  `;\n}\nfunction $0a0889c88b6ced0b$export$58c786fbf111154e() {\n    const loginForm = document.getElementById(\"login-form\");\n    const switchToRegisterBtn = document.getElementById(\"switch-to-register\");\n    const switchToLoginBtn = document.getElementById(\"switch-to-login\");\n    const loginSection = document.getElementById(\"login-section\");\n    const registerSection = document.getElementById(\"register-section\");\n    loginForm.addEventListener(\"submit\", (0, $96b47ed419553bef$export$da4fc2bf424da4ca));\n    switchToRegisterBtn.addEventListener(\"click\", ()=>{\n        loginSection.style.display = \"none\";\n        registerSection.style.display = \"block\";\n    });\n    switchToLoginBtn.addEventListener(\"click\", ()=>{\n        registerSection.style.display = \"none\";\n        loginSection.style.display = \"block\";\n    });\n    (0, $cac777f1d6df4413$export$c10c104de484e4d6)(()=>{\n        // Po udanej rejestracji przełącz z powrotem na formularz logowania\n        registerSection.style.display = \"none\";\n        loginSection.style.display = \"block\";\n    });\n}\n\n\n\nfunction $35da740d59af89ba$export$bd45a425ac802846() {\n    const token = localStorage.getItem(\"userToken\");\n    const appContainer = document.getElementById(\"app\");\n    if (token) {\n        appContainer.innerHTML = (0, $00b513cc47574162$export$2e2bcd8739ae039)();\n        (0, $00b513cc47574162$export$ad66e97ee146d3ae)();\n    } else {\n        appContainer.innerHTML = (0, $0a0889c88b6ced0b$export$2e2bcd8739ae039)();\n        (0, $0a0889c88b6ced0b$export$58c786fbf111154e)();\n    }\n}\ndocument.addEventListener(\"DOMContentLoaded\", $35da740d59af89ba$export$bd45a425ac802846);\n// Nasłuchiwanie na zmiany w localStorage (np. po zalogowaniu lub wylogowaniu)\nwindow.addEventListener(\"storage\", (event)=>{\n    if (event.key === \"userToken\") $35da740d59af89ba$export$bd45a425ac802846();\n});\n\n\n//# sourceMappingURL=index.b14c8036.js.map\n","// /src/index.js\n\nimport HomePage, { setupHomePage } from './pages/HomePage';\nimport LoginPage, { setupAuthForms } from './pages/LoginPage';\nimport './styles/index.scss';\n\nfunction renderApp() {\n  const token = localStorage.getItem('userToken');\n  const appContainer = document.getElementById('app');\n\n  if (token) {\n    appContainer.innerHTML = HomePage();\n    setupHomePage();\n  } else {\n    appContainer.innerHTML = LoginPage();\n    setupAuthForms();\n  }\n}\n\ndocument.addEventListener('DOMContentLoaded', renderApp);\n\n// Nasłuchiwanie na zmiany w localStorage (np. po zalogowaniu lub wylogowaniu)\nwindow.addEventListener('storage', event => {\n  if (event.key === 'userToken') {\n    renderApp();\n  }\n});\n\n// Eksportujemy funkcję renderApp, aby można było jej użyć w innych miejscach aplikacji\nexport { renderApp };\n","// src/pages/HomePage.js\n\nimport LogoutButton, { setupLogoutButton } from '../components/LogoutButton';\nimport { handleLogout } from '../utils/logoutUtils';\nimport { Balance, setupBalance } from '../components/Balance';\nimport {\n  TransactionForm,\n  setupTransactionForm,\n} from '../components/TransactionForm';\nimport {\n  TransactionList,\n  setupTransactionList,\n} from '../components/TransactionList';\nimport Modal, { setupModal, setupOutsideClickModal } from '../components/Modal';\nimport { API_URL } from '../config';\n\nexport default function HomePage() {\n  return `\n    <div id=\"home-page\">\n      <h1>Witaj w aplikacji Kapu$ta!</h1>\n      ${Balance()}\n      ${TransactionForm()}\n      ${TransactionList()}\n      ${LogoutButton()}\n      \n      <!-- Modale -->\n      <div id=\"confirmation-modal-container\"></div>\n      <div id=\"logout-modal-container\"></div>\n      <div id=\"zero-balance-modal-container\"></div>\n    </div>\n  `;\n}\n\nexport async function setupHomePage() {\n  const balanceSetup = await setupBalance();\n  const transactionListSetup = await setupTransactionList(async newBalance => {\n    await balanceSetup.updateBalance(newBalance);\n\n    // Sprawdzenie, czy bilans wynosi 0 po operacji\n    if (newBalance === 0) {\n      showZeroBalanceModal();\n    }\n  });\n\n  setupTransactionForm(async (transaction, newBalance) => {\n    // Aktualizacja balansu i odświeżenie listy transakcji po dodaniu transakcji\n    await balanceSetup.updateBalance(newBalance);\n    await transactionListSetup.refreshTransactions();\n\n    // Sprawdzenie, czy bilans wynosi 0 po dodaniu transakcji\n    if (newBalance === 0) {\n      showZeroBalanceModal();\n    }\n  });\n\n  // Sprawdzenie bilansu po załadowaniu strony\n  const currentBalance = await fetchCurrentBalance();\n  if (currentBalance === 0) {\n    showZeroBalanceModal();\n  }\n\n  // Obsługa przycisku wylogowania\n  setupLogoutButton(() => {\n    showLogoutModal();\n  });\n}\n\n// Funkcja do pokazywania modala dla zerowego bilansu (OK)\nfunction showZeroBalanceModal() {\n  const zeroBalanceModalContainer = document.getElementById(\n    'zero-balance-modal-container'\n  );\n  zeroBalanceModalContainer.innerHTML = Modal({\n    message:\n      \"Hello! To get started, enter the current balance of your account! You can't spend money until you have it :)\",\n    confirmLabel: 'OK',\n    confirmAction: () => {\n      zeroBalanceModalContainer.innerHTML = ''; // Ukryj modal po kliknięciu \"OK\"\n    },\n  });\n\n  setupModal(() => {\n    zeroBalanceModalContainer.innerHTML = ''; // Ukryj modal po kliknięciu \"OK\"\n  });\n\n  // Umożliwienie zamknięcia modala po kliknięciu poza nim\n  setupOutsideClickModal(zeroBalanceModalContainer, '.modal');\n}\n\n// Funkcja do pokazywania modala wylogowania (YES/NO)\nfunction showLogoutModal() {\n  const logoutModalContainer = document.getElementById(\n    'logout-modal-container'\n  );\n  logoutModalContainer.innerHTML = Modal({\n    message: 'Czy na pewno chcesz się wylogować?',\n    confirmLabel: 'Tak',\n    cancelLabel: 'Nie',\n    confirmAction: () => {\n      handleLogout();\n      logoutModalContainer.innerHTML = ''; // Ukryj modal po wylogowaniu\n    },\n    cancelAction: () => {\n      logoutModalContainer.innerHTML = ''; // Ukryj modal po anulowaniu\n    },\n  });\n\n  setupModal(\n    () => {\n      handleLogout();\n      logoutModalContainer.innerHTML = ''; // Ukryj modal po wylogowaniu\n    },\n    () => {\n      logoutModalContainer.innerHTML = ''; // Ukryj modal po anulowaniu\n    }\n  );\n}\n\n// Funkcja do pokazywania modala potwierdzającego akcję (YES/NO)\nfunction showConfirmationModal(message, confirmAction) {\n  const confirmationModalContainer = document.getElementById(\n    'confirmation-modal-container'\n  );\n  confirmationModalContainer.innerHTML = Modal({\n    message,\n    confirmLabel: 'YES',\n    cancelLabel: 'NO',\n    confirmAction: () => {\n      confirmAction();\n      confirmationModalContainer.innerHTML = ''; // Ukryj modal po potwierdzeniu\n    },\n    cancelAction: () => {\n      confirmationModalContainer.innerHTML = ''; // Ukryj modal po anulowaniu\n    },\n  });\n\n  setupModal(\n    () => {\n      confirmAction();\n      confirmationModalContainer.innerHTML = ''; // Ukryj modal po potwierdzeniu\n    },\n    () => {\n      confirmationModalContainer.innerHTML = ''; // Ukryj modal po anulowaniu\n    }\n  );\n}\n\n// Funkcja do pobierania bieżącego bilansu z backendu\nasync function fetchCurrentBalance() {\n  try {\n    const response = await fetch(`${API_URL}/users/balance`, {\n      headers: {\n        Authorization: `Bearer ${localStorage.getItem('userToken')}`,\n      },\n    });\n    const data = await response.json();\n    return data.balance;\n  } catch (error) {\n    console.error('Błąd podczas pobierania bilansu:', error);\n    return null;\n  }\n}\n","// /src/components/LogoutButton.js\n\nexport default function LogoutButton() {\n  return `\n    <button id=\"logout-btn\">Wyloguj</button>\n  `;\n}\n\nexport function setupLogoutButton(onLogoutClick) {\n  const logoutBtn = document.getElementById('logout-btn');\n  if (logoutBtn) {\n    logoutBtn.addEventListener('click', onLogoutClick);\n  }\n}\n","// /src/utils/logoutUtils.js\n\nexport async function handleLogout() {\n  try {\n    const token = localStorage.getItem('userToken');\n    if (!token) {\n      throw new Error('Brak tokenu uwierzytelniającego');\n    }\n\n    const response = await fetch('/api/users/logout', {\n      method: 'POST',\n      headers: {\n        Authorization: `Bearer ${token}`,\n        'Content-Type': 'application/json',\n      },\n    });\n\n    if (!response.ok) {\n      throw new Error('Błąd podczas wylogowywania');\n    }\n\n    // Usunięcie tokena JWT z localStorage\n    localStorage.removeItem('userToken');\n\n    // Można dodać więcej informacji do wyczyszczenia, np. imię użytkownika, email itp.\n    localStorage.removeItem('userName');\n    localStorage.removeItem('userEmail');\n\n    // Przekierowanie na stronę logowania\n    window.location.href = '/login';\n  } catch (error) {\n    console.error('Błąd podczas wylogowywania:', error);\n    alert(`Wystąpił błąd podczas wylogowywania: ${error.message}`);\n  }\n}\n","// src/components/Balance.js\nimport { API_URL } from '../config';\nimport Modal, { setupModal } from './Modal';\n\n// Funkcja pokazująca modal potwierdzający aktualizację bilansu\nfunction showConfirmationModal(message, confirmAction) {\n  const confirmationModalContainer = document.getElementById(\n    'confirmation-modal-container'\n  );\n  confirmationModalContainer.innerHTML = Modal({\n    message,\n    confirmLabel: 'YES',\n    cancelLabel: 'NO',\n    confirmAction: () => {\n      confirmAction();\n      confirmationModalContainer.innerHTML = ''; // Ukryj modal po potwierdzeniu\n    },\n    cancelAction: () => {\n      confirmationModalContainer.innerHTML = ''; // Ukryj modal po anulowaniu\n    },\n  });\n\n  setupModal(\n    () => {\n      confirmAction();\n      confirmationModalContainer.innerHTML = ''; // Ukryj modal po potwierdzeniu\n    },\n    () => {\n      confirmationModalContainer.innerHTML = ''; // Ukryj modal po anulowaniu\n    }\n  );\n}\n\nexport function Balance() {\n  return `\n    <div id=\"balance-container\">\n      <h2>Bilans</h2>\n      <p id=\"balance-amount\">Ładowanie...</p>\n      <button id=\"update-balance-btn\">Aktualizuj bilans</button>\n    </div>\n  `;\n}\n\nexport async function setupBalance() {\n  const balanceAmount = document.getElementById('balance-amount');\n  const updateBalanceBtn = document.getElementById('update-balance-btn');\n\n  async function fetchBalance() {\n    try {\n      const response = await fetch(`${API_URL}/users/balance`, {\n        headers: {\n          Authorization: `Bearer ${localStorage.getItem('userToken')}`,\n        },\n      });\n      const data = await response.json();\n      balanceAmount.textContent = `${data.balance.toFixed(2)} EUR`;\n    } catch (error) {\n      console.error('Błąd podczas pobierania bilansu:', error);\n      balanceAmount.textContent = 'Błąd podczas ładowania bilansu';\n    }\n  }\n\n  async function updateBalance(newBalance) {\n    try {\n      const response = await fetch(`${API_URL}/users/balance`, {\n        method: 'PUT',\n        headers: {\n          'Content-Type': 'application/json',\n          Authorization: `Bearer ${localStorage.getItem('userToken')}`,\n        },\n        body: JSON.stringify({ balance: parseFloat(newBalance) }),\n      });\n      const data = await response.json();\n      balanceAmount.textContent = `${data.balance.toFixed(2)} EUR`;\n\n      // Sprawdzenie, czy zaktualizowany bilans wynosi 0 i wyświetlenie modala\n      if (data.balance === 0) {\n        showZeroBalanceModal();\n      }\n    } catch (error) {\n      console.error('Błąd podczas aktualizacji bilansu:', error);\n      alert('Wystąpił błąd podczas aktualizacji bilansu');\n    }\n  }\n\n  updateBalanceBtn.addEventListener('click', async () => {\n    const newBalance = prompt('Podaj nowy bilans:');\n    if (newBalance === null) return;\n\n    showConfirmationModal(\n      'Czy na pewno chcesz zaktualizować bilans?',\n      async () => {\n        await updateBalance(newBalance);\n      }\n    );\n  });\n\n  await fetchBalance();\n\n  return {\n    updateBalance,\n    refreshBalance: fetchBalance,\n  };\n}\n\n// Funkcja do pokazywania modala zerowego bilansu\nfunction showZeroBalanceModal() {\n  const zeroBalanceModalContainer = document.getElementById(\n    'zero-balance-modal-container'\n  );\n  zeroBalanceModalContainer.innerHTML = Modal({\n    message:\n      \"Hello! To get started, enter the current balance of your account! You can't spend money until you have it :)\",\n    confirmLabel: 'OK',\n    confirmAction: () => {\n      zeroBalanceModalContainer.innerHTML = ''; // Ukryj modal po kliknięciu \"OK\"\n    },\n  });\n\n  setupModal(() => {\n    zeroBalanceModalContainer.innerHTML = ''; // Ukryj modal po kliknięciu \"OK\"\n  });\n\n  // Umożliwienie zamknięcia modala po kliknięciu poza nim\n  setupOutsideClickModal(zeroBalanceModalContainer, '.modal');\n}\n","// /src/config.js\n\n// Zmienna przechowująca adres URL API\nexport const API_URL = 'http://localhost:3000/api';\n","// /src/components/Modal.js\n\nexport default function Modal({\n  message,\n  confirmAction,\n  confirmLabel = 'YES',\n  cancelAction = null,\n  cancelLabel = 'NO',\n}) {\n  return `\n      <div class=\"modal\">\n        <div class=\"modal-content\">\n          <p>${message}</p>\n          <button id=\"modal-confirm-btn\">${confirmLabel}</button>\n          ${\n            cancelAction\n              ? `<button id=\"modal-cancel-btn\">${cancelLabel}</button>`\n              : ''\n          }\n        </div>\n      </div>\n    `;\n}\n\nexport function setupModal(confirmAction, cancelAction = null) {\n  const confirmBtn = document.getElementById('modal-confirm-btn');\n  confirmBtn.addEventListener('click', confirmAction);\n\n  if (cancelAction) {\n    const cancelBtn = document.getElementById('modal-cancel-btn');\n    cancelBtn.addEventListener('click', cancelAction);\n  }\n}\n\n// Funkcja do obsługi zamykania modala po kliknięciu poza nim\nexport function setupOutsideClickModal(modalContainer, modalClass) {\n  document.addEventListener('click', event => {\n    const modal = document.querySelector(modalClass);\n    if (modal && !modal.contains(event.target)) {\n      modalContainer.innerHTML = ''; // Ukryj modal\n    }\n  });\n}\n","// src/components/TransactionForm.js\nimport { API_URL } from '../config';\n\nexport function TransactionForm() {\n  return `\n    <div id=\"transaction-form-container\">\n      <h2>Dodaj transakcję</h2>\n      <form id=\"transaction-form\">\n        <select id=\"transaction-type\" required>\n          <option value=\"\">Wybierz typ</option>\n          <option value=\"income\">Przychód</option>\n          <option value=\"expense\">Wydatek</option>\n        </select>\n        <input type=\"text\" id=\"transaction-category\" placeholder=\"Kategoria\" required>\n        <input type=\"number\" id=\"transaction-amount\" placeholder=\"Kwota\" step=\"0.01\" required>\n        <input type=\"text\" id=\"transaction-description\" placeholder=\"Opis\" required>\n        <button type=\"submit\">Dodaj</button>\n      </form>\n    </div>\n  `;\n}\n\nexport function setupTransactionForm(onTransactionAdded) {\n  const form = document.getElementById('transaction-form');\n\n  form.addEventListener('submit', async e => {\n    e.preventDefault();\n\n    const type = document.getElementById('transaction-type').value;\n    const category = document.getElementById('transaction-category').value;\n    const amount = parseFloat(\n      document.getElementById('transaction-amount').value\n    );\n    const description = document.getElementById(\n      'transaction-description'\n    ).value;\n\n    try {\n      const response = await fetch(`${API_URL}/transactions`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n          Authorization: `Bearer ${localStorage.getItem('userToken')}`,\n        },\n        body: JSON.stringify({ type, category, amount, description }),\n      });\n\n      if (!response.ok) {\n        throw new Error('Błąd podczas dodawania transakcji');\n      }\n\n      const result = await response.json();\n      alert('Transakcja dodana pomyślnie');\n      form.reset();\n\n      if (onTransactionAdded) {\n        onTransactionAdded(result.transaction, result.newBalance);\n      }\n    } catch (error) {\n      console.error('Błąd podczas dodawania transakcji:', error);\n      alert('Wystąpił błąd podczas dodawania transakcji');\n    }\n  });\n}\n","// src/components/TransactionList.js\nimport { API_URL } from '../config';\nimport Modal, { setupModal } from './Modal';\n\nexport function TransactionList() {\n  return `\n    <div id=\"transaction-list-container\">\n      <h2>Lista transakcji</h2>\n      <ul id=\"transaction-list\"></ul>\n    </div>\n  `;\n}\n\nexport async function setupTransactionList(onTransactionDeleted) {\n  const transactionList = document.getElementById('transaction-list');\n\n  async function fetchTransactions() {\n    try {\n      const response = await fetch(`${API_URL}/transactions`, {\n        headers: {\n          Authorization: `Bearer ${localStorage.getItem('userToken')}`,\n        },\n      });\n      const transactions = await response.json();\n      renderTransactions(transactions);\n    } catch (error) {\n      console.error('Błąd podczas pobierania transakcji:', error);\n      transactionList.innerHTML = '<li>Błąd podczas ładowania transakcji</li>';\n    }\n  }\n\n  function renderTransactions(transactions) {\n    transactionList.innerHTML = transactions\n      .map(\n        transaction => `\n        <li data-id=\"${transaction._id}\">\n          ${transaction.type === 'income' ? '📈' : '📉'}\n          ${transaction.category} - ${transaction.amount.toFixed(2)} EUR\n          (${transaction.description})\n          <button class=\"delete-transaction\">Usuń</button>\n        </li>\n      `\n      )\n      .join('');\n\n    setupDeleteButtons();\n  }\n\n  function setupDeleteButtons() {\n    const deleteButtons = document.querySelectorAll('.delete-transaction');\n    deleteButtons.forEach(button => {\n      button.addEventListener('click', async e => {\n        const transactionId = e.target.closest('li').dataset.id;\n        showConfirmationModal(\n          'Czy na pewno chcesz usunąć transakcję?',\n          async () => {\n            try {\n              const response = await fetch(\n                `${API_URL}/transactions/${transactionId}`,\n                {\n                  method: 'DELETE',\n                  headers: {\n                    Authorization: `Bearer ${localStorage.getItem(\n                      'userToken'\n                    )}`,\n                  },\n                }\n              );\n\n              if (!response.ok) {\n                throw new Error('Błąd podczas usuwania transakcji');\n              }\n\n              const result = await response.json();\n              e.target.closest('li').remove();\n              alert('Transakcja usunięta pomyślnie');\n\n              if (onTransactionDeleted) {\n                onTransactionDeleted(result.newBalance);\n              }\n            } catch (error) {\n              console.error('Błąd podczas usuwania transakcji:', error);\n              alert('Wystąpił błąd podczas usuwania transakcji');\n            }\n          }\n        );\n      });\n    });\n  }\n\n  await fetchTransactions();\n\n  return {\n    refreshTransactions: fetchTransactions,\n  };\n}\n\n// Funkcja pokazująca modal potwierdzający usunięcie transakcji\nfunction showConfirmationModal(message, confirmAction) {\n  const confirmationModalContainer = document.getElementById(\n    'confirmation-modal-container'\n  );\n  confirmationModalContainer.innerHTML = Modal({\n    message,\n    confirmLabel: 'YES',\n    cancelLabel: 'NO',\n    confirmAction: () => {\n      confirmAction();\n      confirmationModalContainer.innerHTML = ''; // Ukryj modal po potwierdzeniu\n    },\n    cancelAction: () => {\n      confirmationModalContainer.innerHTML = ''; // Ukryj modal po anulowaniu\n    },\n  });\n\n  setupModal(\n    () => {\n      confirmAction();\n      confirmationModalContainer.innerHTML = ''; // Ukryj modal po potwierdzeniu\n    },\n    () => {\n      confirmationModalContainer.innerHTML = ''; // Ukryj modal po anulowaniu\n    }\n  );\n}\n","// /src/pages/LoginPage.js\n\nimport Login, { handleLogin } from '../components/Login';\nimport RegisterForm, { setupRegisterForm } from '../components/RegisterForm';\n\n// Funkcja renderująca stronę logowania\nexport default function LoginPage() {\n  return `\n    <div id=\"auth-container\">\n      <div id=\"login-section\">\n        <h2>Logowanie</h2>\n        ${Login()}\n        <button id=\"switch-to-register\">Zarejestruj się</button>\n      </div>\n      <div id=\"register-section\" style=\"display: none;\">\n        ${RegisterForm()}\n        <button id=\"switch-to-login\">Powrót do logowania</button>\n      </div>\n    </div>\n  `;\n}\n\n// Funkcja do przypisania obsługi logowania i rejestracji po załadowaniu DOM\nexport function setupAuthForms() {\n  const loginForm = document.getElementById('login-form');\n  const switchToRegisterBtn = document.getElementById('switch-to-register');\n  const switchToLoginBtn = document.getElementById('switch-to-login');\n  const loginSection = document.getElementById('login-section');\n  const registerSection = document.getElementById('register-section');\n\n  loginForm.addEventListener('submit', handleLogin);\n\n  switchToRegisterBtn.addEventListener('click', () => {\n    loginSection.style.display = 'none';\n    registerSection.style.display = 'block';\n  });\n\n  switchToLoginBtn.addEventListener('click', () => {\n    registerSection.style.display = 'none';\n    loginSection.style.display = 'block';\n  });\n\n  setupRegisterForm(() => {\n    // Po udanej rejestracji przełącz z powrotem na formularz logowania\n    registerSection.style.display = 'none';\n    loginSection.style.display = 'block';\n  });\n}\n","// /src/components/Login.js\n\nimport { API_URL } from '../config';\nimport { renderApp } from '../index';\n\n// Funkcja do obsługi logowania\nexport async function handleLogin(event) {\n  event.preventDefault();\n\n  const email = document.getElementById('email').value;\n  const password = document.getElementById('password').value;\n\n  try {\n    // Wysłanie zapytania POST do API\n    const response = await fetch(`${API_URL}/users/login`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify({ email, password }),\n    });\n\n    const data = await response.json();\n\n    if (response.ok) {\n      // Zalogowano pomyślnie, zapisujemy token\n      console.log('Zalogowano pomyślnie:', data);\n      localStorage.setItem('userToken', data.token);\n\n      // Wywołanie renderApp do przerysowania aplikacji\n      renderApp();\n    } else {\n      // Obsługa błędów logowania\n      console.error('Błąd logowania:', data.message || 'Nieznany błąd');\n      alert(`Błąd logowania: ${data.message}`);\n    }\n  } catch (error) {\n    console.error('Wystąpił problem z logowaniem:', error);\n    alert('Wystąpił problem z logowaniem. Spróbuj ponownie później.');\n  }\n}\n\n// Funkcja renderująca formularz logowania\nexport default function Login() {\n  return `\n    <form id=\"login-form\">\n      <label for=\"email\">Email:</label>\n      <input type=\"email\" id=\"email\" required />\n      \n      <label for=\"password\">Hasło:</label>\n      <input type=\"password\" id=\"password\" required />\n      \n      <button type=\"submit\">Zaloguj</button>\n    </form>\n  `;\n}\n","// src/components/RegisterForm.js\n\nexport default function RegisterForm() {\n  return `\n    <form id=\"register-form\">\n      <h2>Rejestracja</h2>\n      <div>\n        <label for=\"register-name\">Imię:</label>\n        <input type=\"text\" id=\"register-name\" name=\"name\" required>\n      </div>\n      <div>\n        <label for=\"register-email\">Email:</label>\n        <input type=\"email\" id=\"register-email\" name=\"email\" required>\n      </div>\n      <div>\n        <label for=\"register-password\">Hasło:</label>\n        <input type=\"password\" id=\"register-password\" name=\"password\" required>\n      </div>\n      <button type=\"submit\">Zarejestruj się</button>\n    </form>\n  `;\n}\n\nexport function setupRegisterForm(onRegisterSuccess) {\n  const form = document.getElementById('register-form');\n  form.addEventListener('submit', async e => {\n    e.preventDefault();\n    const formData = new FormData(form);\n    const userData = Object.fromEntries(formData.entries());\n\n    try {\n      const response = await fetch('/api/users/register', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify(userData),\n      });\n\n      if (response.ok) {\n        alert('Rejestracja udana! Możesz się teraz zalogować.');\n        onRegisterSuccess();\n      } else {\n        const errorData = await response.json();\n        alert(`Błąd rejestracji: ${errorData.message}`);\n      }\n    } catch (error) {\n      console.error('Błąd podczas rejestracji:', error);\n      alert('Wystąpił błąd podczas rejestracji. Spróbuj ponownie później.');\n    }\n  });\n}\n"],"names":["$989791cafdc493c9$export$297d1113e3afbc21","token","localStorage","getItem","Error","response","fetch","method","headers","Authorization","ok","removeItem","window","location","href","error","console","alert","message","$bebe1cbb5a309c8c$export$923ea8233b386e99","$05e7e3be0aee325f$export$2e2bcd8739ae039","confirmAction","confirmLabel","cancelAction","cancelLabel","$05e7e3be0aee325f$export$60f0f9f4cfa9469a","confirmBtn","document","getElementById","addEventListener","cancelBtn","$a41a1172b6be875d$export$e215f40035e0215c","balanceAmount","fetchBalance","data","json","textContent","balance","toFixed","updateBalance","newBalance","body","JSON","stringify","parseFloat","$a41a1172b6be875d$var$showZeroBalanceModal","zeroBalanceModalContainer","innerHTML","setupOutsideClickModal","updateBalanceBtn","prompt","$a41a1172b6be875d$var$showConfirmationModal","confirmationModalContainer","refreshBalance","$53667404e219f87f$export$35fea698833488ba","onTransactionDeleted","transactionList","fetchTransactions","transactions","map","transaction","_id","type","category","amount","description","join","deleteButtons","querySelectorAll","forEach","button","e","transactionId","target","closest","dataset","id","$53667404e219f87f$var$showConfirmationModal","result","remove","refreshTransactions","$00b513cc47574162$export$ad66e97ee146d3ae","balanceSetup","transactionListSetup","$00b513cc47574162$var$showZeroBalanceModal","onTransactionAdded","form","preventDefault","value","reset","$00b513cc47574162$var$fetchCurrentBalance","onLogoutClick","logoutBtn","$00b513cc47574162$var$showLogoutModal","logoutModalContainer","modalClass","event","modal","querySelector","contains","modalContainer","$96b47ed419553bef$export$da4fc2bf424da4ca","email","password","log","setItem","$35da740d59af89ba$export$bd45a425ac802846","appContainer","loginForm","switchToRegisterBtn","switchToLoginBtn","loginSection","registerSection","style","display","onRegisterSuccess","userData","Object","fromEntries","formData","FormData","entries","errorData","key"],"version":3,"file":"index.b14c8036.js.map"}